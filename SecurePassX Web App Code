from flask import Flask, request, render_template_string
import random

app = Flask(__name__)

# ASCII Cipher Functions
def asciicipher_encrypt(plaintext, shift):
    encrypted_message = ""
    for char in plaintext:
        asciinum = ord(char)
        new_ascii_num = ((asciinum - 32 + shift) % 95) + 32
        encrypted_message += chr(new_ascii_num)
    return encrypted_message


def asciidecrypt(encrypted_message, shift):
    decrypted_message = ""
    for char in encrypted_message:
        ascii_num = ord(char)
        new_ascii_num = ((ascii_num - 32 - shift) % 95) + 32
        decrypted_message += chr(new_ascii_num)
    return decrypted_message


# Password Checker Function
def passwordchecker(password):
    special_characters = set("!@#$%^&*()-_+=[]{}|\\:;\"'<>,.?/~")
    common_passwords = {
        'password', '123456', '123456789', 'qwerty', 'abc123'
    }

    # Initialize score
    score = 0

    # Check against common passwords
    if password in common_passwords:
        return "Very Weak"

    # Length check
    if len(password) >= 9:
        score += 1

    # Character type checks
    has_lower = any(char.islower() for char in password)
    has_upper = any(char.isupper() for char in password)
    has_digit = any(char.isdigit() for char in password)
    has_special = any(char in special_characters for char in password)

    score += has_lower + has_upper + has_digit + has_special

    # Determine strength based on score
    if score == 5:
        strength = "Very Strong"
    elif score == 4:
        strength = "Strong"
    elif score == 2 or score == 3:
        strength = "Weak"
    else:
        strength = "Very Weak"

    return strength



# Random Character Generator
def Randomchar():
    items = []
    ThisRange = random.randint(1, 4)
    if ThisRange == 1:
        items = list('abcdefghijklmnopqrstuvwxyz')
    elif ThisRange == 2:
        items = list('ABCDEFGHIJKLMNOPQRSTUVWXYZ')
    elif ThisRange == 3:
        items = list('0123456789')
    elif ThisRange == 4:
        items = list('!@#$%^&*()-_+=[]{}|\\:;\"\'<>,.?/~')
    return random.choice(items)


def Generate(passlen):
    password = ""
    for _ in range(passlen):
        nextchar = Randomchar()
        password += nextchar
    return password


# Routes
@app.route('/')
def home():
    return render_template_string('''
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>My Web App</title>
        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
        <style>
            body {
                padding-top: 40px;
                background-color: #f8f9fa;
            }
            .container {
                max-width: 600px;
            }
            h1 {
                text-align: center;
                margin-bottom: 30px;
            }
            .form-group {
                margin-bottom: 15px;
            }
            footer {
                text-align: center;
                margin-top: 50px;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <h1>SecurePassX</h1>
            <h1>Secure Your Data, Strengthen Your Passwords, Protect Your Privacy</h1>
            <h1>Welcome to My Web App</h1>
            <div class="card p-4 shadow-sm">
                <!-- Password Generator -->
                <form action="/generate_password" method="post">
                    <div class="form-group">
                        <label for="passlen">Generate Random Password Length:</label>
                        <input type="number" id="passlen" name="passlen" class="form-control" min="1" placeholder="Enter length">
                    </div>
                    <button type="submit" class="btn btn-warning w-100">Generate Password</button>
                </form>
                <hr>

                <!-- Password Strength Checker -->
                <form action="/check_password" method="post">
                    <div class="form-group">
                        <label for="password">Check Password Strength:</label>
                        <input type="text" id="password" name="password" class="form-control" placeholder="Enter password">
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Check Strength</button>
                </form>
                <hr>

                <!-- ASCII Encryption -->
                <form action="/encrypt" method="post">
                    <div class="form-group">
                        <label for="plaintext">Encrypt Text:</label>
                        <input type="text" id="plaintext" name="plaintext" class="form-control" placeholder="Enter text">
                    </div>
                    <div class="form-group">
                        <label for="shift">Shift:</label>
                        <input type="number" id="shift" name="shift" class="form-control" min="1" max="94" placeholder="Enter shift (1-94)">
                    </div>
                    <button type="submit" class="btn btn-success w-100">Encrypt</button>
                </form>
                <hr>

                <!-- ASCII Decryption -->
                <form action="/decrypt" method="post">
                    <div class="form-group">
                        <label for="encrypted">Decrypt Text:</label>
                        <input type="text" id="encrypted" name="encrypted" class="form-control" placeholder="Enter encrypted text">
                    </div>
                    <div class="form-group">
                        <label for="shift_decrypt">Shift:</label>
                        <input type="number" id="shift_decrypt" name="shift" class="form-control" min="1" max="94" placeholder="Enter shift (1-94)">
                    </div>
                    <button type="submit" class="btn btn-danger w-100">Decrypt</button>
                </form>
            </div>
        </div>
        <footer>
            <p>&copy; 2024 My Web App</p>
        </footer>

        <!-- Bootstrap JS -->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    </body>
    </html>
    ''')



@app.route('/check_password', methods=['POST'])
def check_password():
    password = request.form['password']
    strength = passwordchecker(password)
    return f'Password strength: {strength}'


@app.route('/encrypt', methods=['POST'])
def encrypt():
    plaintext = request.form['plaintext']
    shift = int(request.form['shift'])
    encrypted_message = asciicipher_encrypt(plaintext, shift)
    return f'Encrypted message: {encrypted_message}'


@app.route('/decrypt', methods=['POST'])
def decrypt():
    encrypted_message = request.form['encrypted']
    shift = int(request.form['shift'])
    decrypted_message = asciidecrypt(encrypted_message, shift)
    return f'Decrypted message: {decrypted_message}'


@app.route('/generate_password', methods=['POST'])
def generate_password():
    passlen = int(request.form['passlen'])
    passkey = Generate(passlen)
    return f'Generated password: {passkey}'


if __name__ == '__main__':
    app.run(debug=True)

